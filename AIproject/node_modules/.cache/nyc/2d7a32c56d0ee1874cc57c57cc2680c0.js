var cov_1dosy0at9=function(){var path="/home/cong/study/fse/f18-ESN-SB2/controllers/chatPubliclyController.js",hash="e1cdf15443230bd429d43eb2f7441cca1ac40d2c",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/cong/study/fse/f18-ESN-SB2/controllers/chatPubliclyController.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:32}},"1":{start:{line:2,column:13},end:{line:2,column:29}},"2":{start:{line:3,column:12},end:{line:3,column:21}},"3":{start:{line:4,column:15},end:{line:4,column:42}},"4":{start:{line:5,column:17},end:{line:5,column:42}},"5":{start:{line:6,column:16},end:{line:6,column:43}},"6":{start:{line:7,column:16},end:{line:7,column:50}},"7":{start:{line:8,column:13},end:{line:8,column:28}},"8":{start:{line:9,column:19},end:{line:9,column:41}},"9":{start:{line:10,column:16},end:{line:10,column:43}},"10":{start:{line:11,column:13},end:{line:11,column:28}},"11":{start:{line:12,column:0},end:{line:12,column:16}},"12":{start:{line:15,column:0},end:{line:15,column:27}},"13":{start:{line:18,column:0},end:{line:56,column:1}},"14":{start:{line:19,column:2},end:{line:54,column:5}},"15":{start:{line:21,column:18},end:{line:21,column:29}},"16":{start:{line:22,column:17},end:{line:22,column:25}},"17":{start:{line:23,column:15},end:{line:23,column:23}},"18":{start:{line:24,column:19},end:{line:24,column:22}},"19":{start:{line:25,column:12},end:{line:25,column:22}},"20":{start:{line:26,column:19},end:{line:26,column:34}},"21":{start:{line:29,column:4},end:{line:52,column:9}},"22":{start:{line:34,column:8},end:{line:35,column:51}},"23":{start:{line:34,column:26},end:{line:34,column:42}},"24":{start:{line:35,column:15},end:{line:35,column:49}},"25":{start:{line:37,column:25},end:{line:45,column:10}},"26":{start:{line:48,column:8},end:{line:50,column:11}},"27":{start:{line:51,column:8},end:{line:51,column:25}},"28":{start:{line:58,column:0},end:{line:75,column:1}},"29":{start:{line:61,column:2},end:{line:73,column:5}},"30":{start:{line:62,column:4},end:{line:72,column:9}},"31":{start:{line:66,column:8},end:{line:66,column:36}},"32":{start:{line:66,column:17},end:{line:66,column:36}},"33":{start:{line:71,column:8},end:{line:71,column:42}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:25},end:{line:18,column:26}},loc:{start:{line:18,column:58},end:{line:56,column:1}},line:18},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:21},end:{line:19,column:22}},loc:{start:{line:19,column:42},end:{line:54,column:3}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:33},end:{line:31,column:34}},loc:{start:{line:31,column:54},end:{line:52,column:7}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:48,column:24},end:{line:48,column:25}},loc:{start:{line:48,column:39},end:{line:50,column:9}},line:48},"4":{name:"(anonymous_4)",decl:{start:{line:58,column:26},end:{line:58,column:27}},loc:{start:{line:58,column:38},end:{line:75,column:1}},line:58},"5":{name:"(anonymous_5)",decl:{start:{line:61,column:21},end:{line:61,column:22}},loc:{start:{line:61,column:42},end:{line:73,column:3}},line:61},"6":{name:"(anonymous_6)",decl:{start:{line:64,column:33},end:{line:64,column:34}},loc:{start:{line:64,column:58},end:{line:72,column:7}},line:64}},branchMap:{"0":{loc:{start:{line:34,column:8},end:{line:35,column:51}},type:"if",locations:[{start:{line:34,column:8},end:{line:35,column:51}},{start:{line:34,column:8},end:{line:35,column:51}}],line:34},"1":{loc:{start:{line:66,column:8},end:{line:66,column:36}},type:"if",locations:[{start:{line:66,column:8},end:{line:66,column:36}},{start:{line:66,column:8},end:{line:66,column:36}}],line:66}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var express=(cov_1dosy0at9.s[0]++,require("express")),router=(cov_1dosy0at9.s[1]++,express.Router());const app=(cov_1dosy0at9.s[2]++,express());const server=(cov_1dosy0at9.s[3]++,require("http").Server(app));const mongoose=(cov_1dosy0at9.s[4]++,require("./db-connector"));const citizen=(cov_1dosy0at9.s[5]++,require("../model/Citizen"));const Citizen=(cov_1dosy0at9.s[6]++,mongoose.model('Citizen',citizen));const path=(cov_1dosy0at9.s[7]++,require("path"));const bodyParser=(cov_1dosy0at9.s[8]++,require('body-parser'));const Message=(cov_1dosy0at9.s[9]++,require("../model/message"));const cors=(cov_1dosy0at9.s[10]++,require("cors"));cov_1dosy0at9.s[11]++;app.use(cors());// app.use(bodyParser.urlencoded({ extended: false }));
cov_1dosy0at9.s[12]++;app.use(bodyParser.json());// to support JSON-encoded bodies
//rest api to create a new message
cov_1dosy0at9.s[13]++;module.exports.message=function(bodyContent,bodyUser){cov_1dosy0at9.f[0]++;cov_1dosy0at9.s[14]++;return new Promise((resolve,reject)=>{cov_1dosy0at9.f[1]++;// router.post('/message', function (req, res) {
let content=(cov_1dosy0at9.s[15]++,bodyContent);let author=(cov_1dosy0at9.s[16]++,bodyUser);let type=(cov_1dosy0at9.s[17]++,"Public");let receiver=(cov_1dosy0at9.s[18]++,"-");let d=(cov_1dosy0at9.s[19]++,new Date());let postedAt=(cov_1dosy0at9.s[20]++,d.toISOString());// create a new user
cov_1dosy0at9.s[21]++;Citizen.find({}).where('username').equals(author).sort({postedAt:1}).exec(function(err,stat){cov_1dosy0at9.f[2]++;// if(err) return reject(err);
var tempStat;cov_1dosy0at9.s[22]++;if(stat==""){cov_1dosy0at9.b[0][0]++;cov_1dosy0at9.s[23]++;tempStat="Ok";}else{cov_1dosy0at9.b[0][1]++;cov_1dosy0at9.s[24]++;tempStat=stat[0].lastStatusCode;}// console.log(stat[0].lastStatusCode);
var newMessage=(cov_1dosy0at9.s[25]++,new Message({content:content,author:author,messageType:type,receiver:receiver,postedAt:postedAt,userStat:tempStat,wallId:"-"}));// save the message
cov_1dosy0at9.s[26]++;newMessage.save(function(err){// if (err) throw err;
cov_1dosy0at9.f[3]++;});cov_1dosy0at9.s[27]++;resolve(content);});});// });
};cov_1dosy0at9.s[28]++;module.exports.messages=function(){cov_1dosy0at9.f[4]++;cov_1dosy0at9.s[29]++;// app.get('/messages', function (req, res) {
// get all the users
return new Promise((resolve,reject)=>{cov_1dosy0at9.f[5]++;cov_1dosy0at9.s[30]++;Message.find({}).where('messageType').equals('Public').sort({postedAt:1}).exec(function(err,messages){cov_1dosy0at9.f[6]++;cov_1dosy0at9.s[31]++;// if (err) throw err;
if(err){cov_1dosy0at9.b[1][0]++;cov_1dosy0at9.s[32]++;return reject(err);}else{cov_1dosy0at9.b[1][1]++;}// object of all the users
// console.log(JSON.stringify(messages));
// res.end(JSON.stringify(messages));
cov_1dosy0at9.s[33]++;resolve(JSON.stringify(messages));});});// });
};// module.exports = router