var cov_1d8cqffdg8=function(){var path="/home/cong/study/fse/f18-ESN-SB2/controllers/searchController.js",hash="123ce554b517d12d4efafd670ad26241d8b25321",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/cong/study/fse/f18-ESN-SB2/controllers/searchController.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:13},end:{line:2,column:29}},"2":{start:{line:3,column:12},end:{line:3,column:21}},"3":{start:{line:4,column:15},end:{line:4,column:42}},"4":{start:{line:5,column:17},end:{line:5,column:42}},"5":{start:{line:6,column:16},end:{line:6,column:43}},"6":{start:{line:7,column:16},end:{line:7,column:50}},"7":{start:{line:8,column:13},end:{line:8,column:28}},"8":{start:{line:9,column:19},end:{line:9,column:41}},"9":{start:{line:10,column:16},end:{line:10,column:43}},"10":{start:{line:11,column:13},end:{line:11,column:28}},"11":{start:{line:12,column:12},end:{line:12,column:26}},"12":{start:{line:13,column:16},end:{line:13,column:925}},"13":{start:{line:14,column:0},end:{line:14,column:16}},"14":{start:{line:17,column:0},end:{line:17,column:27}},"15":{start:{line:20,column:0},end:{line:68,column:1}},"16":{start:{line:21,column:2},end:{line:67,column:5}},"17":{start:{line:23,column:22},end:{line:23,column:30}},"18":{start:{line:24,column:19},end:{line:24,column:29}},"19":{start:{line:26,column:4},end:{line:66,column:5}},"20":{start:{line:27,column:6},end:{line:38,column:11}},"21":{start:{line:37,column:10},end:{line:37,column:41}},"22":{start:{line:40,column:9},end:{line:66,column:5}},"23":{start:{line:41,column:6},end:{line:52,column:11}},"24":{start:{line:51,column:10},end:{line:51,column:41}},"25":{start:{line:55,column:6},end:{line:65,column:11}},"26":{start:{line:64,column:10},end:{line:64,column:41}},"27":{start:{line:72,column:0},end:{line:88,column:1}},"28":{start:{line:73,column:2},end:{line:87,column:5}},"29":{start:{line:75,column:25},end:{line:75,column:36}},"30":{start:{line:76,column:17},end:{line:76,column:25}},"31":{start:{line:77,column:4},end:{line:86,column:5}},"32":{start:{line:78,column:6},end:{line:83,column:11}},"33":{start:{line:82,column:10},end:{line:82,column:44}},"34":{start:{line:85,column:6},end:{line:85,column:18}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:29},end:{line:20,column:30}},loc:{start:{line:20,column:61},end:{line:68,column:1}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:21},end:{line:21,column:22}},loc:{start:{line:21,column:42},end:{line:67,column:3}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:33,column:55},end:{line:33,column:56}},loc:{start:{line:33,column:77},end:{line:38,column:9}},line:33},"3":{name:"(anonymous_3)",decl:{start:{line:47,column:55},end:{line:47,column:56}},loc:{start:{line:47,column:77},end:{line:52,column:9}},line:47},"4":{name:"(anonymous_4)",decl:{start:{line:61,column:55},end:{line:61,column:56}},loc:{start:{line:61,column:77},end:{line:65,column:9}},line:61},"5":{name:"(anonymous_5)",decl:{start:{line:72,column:29},end:{line:72,column:30}},loc:{start:{line:72,column:62},end:{line:88,column:1}},line:72},"6":{name:"(anonymous_6)",decl:{start:{line:73,column:21},end:{line:73,column:22}},loc:{start:{line:73,column:42},end:{line:87,column:3}},line:73},"7":{name:"(anonymous_7)",decl:{start:{line:80,column:36},end:{line:80,column:37}},loc:{start:{line:80,column:61},end:{line:83,column:9}},line:80}},branchMap:{"0":{loc:{start:{line:26,column:4},end:{line:66,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:66,column:5}},{start:{line:26,column:4},end:{line:66,column:5}}],line:26},"1":{loc:{start:{line:26,column:7},end:{line:26,column:38}},type:"binary-expr",locations:[{start:{line:26,column:7},end:{line:26,column:22}},{start:{line:26,column:26},end:{line:26,column:38}}],line:26},"2":{loc:{start:{line:40,column:9},end:{line:66,column:5}},type:"if",locations:[{start:{line:40,column:9},end:{line:66,column:5}},{start:{line:40,column:9},end:{line:66,column:5}}],line:40},"3":{loc:{start:{line:40,column:13},end:{line:40,column:44}},type:"binary-expr",locations:[{start:{line:40,column:13},end:{line:40,column:28}},{start:{line:40,column:32},end:{line:40,column:44}}],line:40},"4":{loc:{start:{line:77,column:4},end:{line:86,column:5}},type:"if",locations:[{start:{line:77,column:4},end:{line:86,column:5}},{start:{line:77,column:4},end:{line:86,column:5}}],line:77}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_1d8cqffdg8.s[0]++,require('express')),router=(cov_1d8cqffdg8.s[1]++,express.Router());const app=(cov_1d8cqffdg8.s[2]++,express());const server=(cov_1d8cqffdg8.s[3]++,require('http').Server(app));const mongoose=(cov_1d8cqffdg8.s[4]++,require('./db-connector'));const citizen=(cov_1d8cqffdg8.s[5]++,require('../model/Citizen'));const Citizen=(cov_1d8cqffdg8.s[6]++,mongoose.model('Citizen',citizen));const path=(cov_1d8cqffdg8.s[7]++,require('path'));const bodyParser=(cov_1d8cqffdg8.s[8]++,require('body-parser'));const Message=(cov_1d8cqffdg8.s[9]++,require('../model/message'));const cors=(cov_1d8cqffdg8.s[10]++,require('cors'));const url=(cov_1d8cqffdg8.s[11]++,require('url'));const banList=(cov_1d8cqffdg8.s[12]++,["a","able","about","across","after","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","get","got","had","has","have","he","her","hers","him","his","how","however","i","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","off","often","on","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","this","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your"]);cov_1d8cqffdg8.s[13]++;app.use(cors());// app.use(bodyParser.urlencoded({ extended: false }));
cov_1d8cqffdg8.s[14]++;app.use(bodyParser.json());// to support JSON-encoded bodies
//rest api to get list of user
cov_1d8cqffdg8.s[15]++;module.exports.citizenList=function(bodyUser,bodyStatus){cov_1d8cqffdg8.f[0]++;cov_1d8cqffdg8.s[16]++;return new Promise((resolve,reject)=>{cov_1d8cqffdg8.f[1]++;// router.get('/citizenList', function (req, res) {
const inputName=(cov_1d8cqffdg8.s[17]++,bodyUser);const status=(cov_1d8cqffdg8.s[18]++,bodyStatus);// console.log(inputName+" :"+status);
cov_1d8cqffdg8.s[19]++;if((cov_1d8cqffdg8.b[1][0]++,inputName!='')&&(cov_1d8cqffdg8.b[1][1]++,status!='')){cov_1d8cqffdg8.b[0][0]++;cov_1d8cqffdg8.s[20]++;Citizen.find({$and:[{'username':{$regex:'.*'+inputName+'.*'}},{'lastStatusCode':status}]}).where('userType').equals('CITIZEN').sort({'userStatus':-1,'username':1}).exec(function(err,users){cov_1d8cqffdg8.f[2]++;cov_1d8cqffdg8.s[21]++;// object of all the users
// console.log(users);
resolve(JSON.stringify(users));});}else{cov_1d8cqffdg8.b[0][1]++;cov_1d8cqffdg8.s[22]++;if((cov_1d8cqffdg8.b[3][0]++,inputName!='')&&(cov_1d8cqffdg8.b[3][1]++,status=='')){cov_1d8cqffdg8.b[2][0]++;cov_1d8cqffdg8.s[23]++;Citizen.find({$and:[{'username':{$regex:'.*'+inputName+'.*'}}]}).where('userType').equals('CITIZEN').sort({'userStatus':-1,'username':1}).exec(function(err,users){cov_1d8cqffdg8.f[3]++;cov_1d8cqffdg8.s[24]++;// object of all the users
// console.log(users);
resolve(JSON.stringify(users));});}else{cov_1d8cqffdg8.b[2][1]++;cov_1d8cqffdg8.s[25]++;Citizen.find({$and:[{'lastStatusCode':status}]}).where('userType').equals('CITIZEN').sort({'userStatus':-1,'username':1}).exec(function(err,users){cov_1d8cqffdg8.f[4]++;cov_1d8cqffdg8.s[26]++;// object of all the users
// console.log(users);
resolve(JSON.stringify(users));});}}});};//rest api to get list of user
cov_1d8cqffdg8.s[27]++;module.exports.messageList=function(bodyMessage,bodyType){cov_1d8cqffdg8.f[5]++;cov_1d8cqffdg8.s[28]++;return new Promise((resolve,reject)=>{cov_1d8cqffdg8.f[6]++;// router.get('/messageList', function (req, res) {
const inputMessage=(cov_1d8cqffdg8.s[29]++,bodyMessage);const type=(cov_1d8cqffdg8.s[30]++,bodyType);cov_1d8cqffdg8.s[31]++;if(banList.indexOf(inputMessage)==-1){cov_1d8cqffdg8.b[4][0]++;cov_1d8cqffdg8.s[32]++;Message.find({'content':{$regex:'.*'+inputMessage+'.*'}}).where('messageType').equals(type).sort({postedAt:-1}).exec(function(err,announce){cov_1d8cqffdg8.f[7]++;cov_1d8cqffdg8.s[33]++;// if (err) throw err;
resolve(JSON.stringify(announce));});}else{cov_1d8cqffdg8.b[4][1]++;cov_1d8cqffdg8.s[34]++;resolve("");}});};// module.exports = router